Design and Implementation
	This program was easily the hardest program I've ever had to make so far in my CS career, there was a seemingly infinite amount of debugging. I went through many different programs before I finally got it to work. My program extensively uses a bit-splitter to separate bits from each other and place them into variables, arrays, registers, and memory. This method provides many benefits such as easy conversion from little endian to twos complement, sign extension, and splitting of characters from memory. I utilized structs for peace of mind, and ternary operators where applicable.

Challenges
	Keeping track of how values are stored in memory was tedious. I also had a lot of trouble understanding what exactly an emulator does, and how it does it. Having to look at a minimum of three different documents to try and grasp an understanding was tedious. Sometimes I forgot to increment program counters, and misspelling gave me a lot of trouble. Instead I opted to abstract that incrementation to a function which eased a lot of headache. Overall I learned quite a good deal about bits, bit-manipulation and how bits are represented in memory as well as how an emulator works, machine code and more generally how a computer functions.