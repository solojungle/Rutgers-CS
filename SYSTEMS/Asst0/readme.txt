Pointersorter receives a string, where is it split into tokens by memcpy. Tokens are split by delimiters which include everything but alphabetical characters. Nodes are malloced, tokens are added to the node, and nodes are pushed onto a Linked list. Mergesort is applied to the linked list, the list is split by sending a fast pointer to the end of the list, and a slow pointer to find the middle. The fast point is set to the beginning of the list after it reaches the end. Merge is then applied to the front and back of the Linked list and finally merge once more. The list is then printed into terminal, and malloced memory is then freed. I tested exhaustively cases of delimiters, number of arguments, blank strings, escape characters, uppercase and lowercase characters. I tested the order of prints to satisfy the prescribed order. Some nice features I implemented in my program is merge sort, warning messages on empty strings, and error messages when the program cannot allocate enough memory for malloc as well as error messages for improper input.